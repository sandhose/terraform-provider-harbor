// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetRepositoriesRepoNameTagsTagScanUUIDLogReader is a Reader for the GetRepositoriesRepoNameTagsTagScanUUIDLog structure.
type GetRepositoriesRepoNameTagsTagScanUUIDLogReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRepositoriesRepoNameTagsTagScanUUIDLogReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRepositoriesRepoNameTagsTagScanUUIDLogOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetRepositoriesRepoNameTagsTagScanUUIDLogUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRepositoriesRepoNameTagsTagScanUUIDLogForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRepositoriesRepoNameTagsTagScanUUIDLogNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRepositoriesRepoNameTagsTagScanUUIDLogInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetRepositoriesRepoNameTagsTagScanUUIDLogOK creates a GetRepositoriesRepoNameTagsTagScanUUIDLogOK with default headers values
func NewGetRepositoriesRepoNameTagsTagScanUUIDLogOK() *GetRepositoriesRepoNameTagsTagScanUUIDLogOK {
	return &GetRepositoriesRepoNameTagsTagScanUUIDLogOK{}
}

/*GetRepositoriesRepoNameTagsTagScanUUIDLogOK handles this case with default header values.

OK
*/
type GetRepositoriesRepoNameTagsTagScanUUIDLogOK struct {
	Payload string
}

func (o *GetRepositoriesRepoNameTagsTagScanUUIDLogOK) Error() string {
	return fmt.Sprintf("[GET /repositories/{repo_name}/tags/{tag}/scan/{uuid}/log][%d] getRepositoriesRepoNameTagsTagScanUuidLogOK  %+v", 200, o.Payload)
}

func (o *GetRepositoriesRepoNameTagsTagScanUUIDLogOK) GetPayload() string {
	return o.Payload
}

func (o *GetRepositoriesRepoNameTagsTagScanUUIDLogOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRepositoriesRepoNameTagsTagScanUUIDLogUnauthorized creates a GetRepositoriesRepoNameTagsTagScanUUIDLogUnauthorized with default headers values
func NewGetRepositoriesRepoNameTagsTagScanUUIDLogUnauthorized() *GetRepositoriesRepoNameTagsTagScanUUIDLogUnauthorized {
	return &GetRepositoriesRepoNameTagsTagScanUUIDLogUnauthorized{}
}

/*GetRepositoriesRepoNameTagsTagScanUUIDLogUnauthorized handles this case with default header values.

Unauthorized request
*/
type GetRepositoriesRepoNameTagsTagScanUUIDLogUnauthorized struct {
}

func (o *GetRepositoriesRepoNameTagsTagScanUUIDLogUnauthorized) Error() string {
	return fmt.Sprintf("[GET /repositories/{repo_name}/tags/{tag}/scan/{uuid}/log][%d] getRepositoriesRepoNameTagsTagScanUuidLogUnauthorized ", 401)
}

func (o *GetRepositoriesRepoNameTagsTagScanUUIDLogUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRepositoriesRepoNameTagsTagScanUUIDLogForbidden creates a GetRepositoriesRepoNameTagsTagScanUUIDLogForbidden with default headers values
func NewGetRepositoriesRepoNameTagsTagScanUUIDLogForbidden() *GetRepositoriesRepoNameTagsTagScanUUIDLogForbidden {
	return &GetRepositoriesRepoNameTagsTagScanUUIDLogForbidden{}
}

/*GetRepositoriesRepoNameTagsTagScanUUIDLogForbidden handles this case with default header values.

Request is not allowed
*/
type GetRepositoriesRepoNameTagsTagScanUUIDLogForbidden struct {
}

func (o *GetRepositoriesRepoNameTagsTagScanUUIDLogForbidden) Error() string {
	return fmt.Sprintf("[GET /repositories/{repo_name}/tags/{tag}/scan/{uuid}/log][%d] getRepositoriesRepoNameTagsTagScanUuidLogForbidden ", 403)
}

func (o *GetRepositoriesRepoNameTagsTagScanUUIDLogForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRepositoriesRepoNameTagsTagScanUUIDLogNotFound creates a GetRepositoriesRepoNameTagsTagScanUUIDLogNotFound with default headers values
func NewGetRepositoriesRepoNameTagsTagScanUUIDLogNotFound() *GetRepositoriesRepoNameTagsTagScanUUIDLogNotFound {
	return &GetRepositoriesRepoNameTagsTagScanUUIDLogNotFound{}
}

/*GetRepositoriesRepoNameTagsTagScanUUIDLogNotFound handles this case with default header values.

The target artifact is not found
*/
type GetRepositoriesRepoNameTagsTagScanUUIDLogNotFound struct {
}

func (o *GetRepositoriesRepoNameTagsTagScanUUIDLogNotFound) Error() string {
	return fmt.Sprintf("[GET /repositories/{repo_name}/tags/{tag}/scan/{uuid}/log][%d] getRepositoriesRepoNameTagsTagScanUuidLogNotFound ", 404)
}

func (o *GetRepositoriesRepoNameTagsTagScanUUIDLogNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRepositoriesRepoNameTagsTagScanUUIDLogInternalServerError creates a GetRepositoriesRepoNameTagsTagScanUUIDLogInternalServerError with default headers values
func NewGetRepositoriesRepoNameTagsTagScanUUIDLogInternalServerError() *GetRepositoriesRepoNameTagsTagScanUUIDLogInternalServerError {
	return &GetRepositoriesRepoNameTagsTagScanUUIDLogInternalServerError{}
}

/*GetRepositoriesRepoNameTagsTagScanUUIDLogInternalServerError handles this case with default header values.

Internal server error happened
*/
type GetRepositoriesRepoNameTagsTagScanUUIDLogInternalServerError struct {
}

func (o *GetRepositoriesRepoNameTagsTagScanUUIDLogInternalServerError) Error() string {
	return fmt.Sprintf("[GET /repositories/{repo_name}/tags/{tag}/scan/{uuid}/log][%d] getRepositoriesRepoNameTagsTagScanUuidLogInternalServerError ", 500)
}

func (o *GetRepositoriesRepoNameTagsTagScanUUIDLogInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
